[["index.html", "10: Written and Oral Communication in Data Science About this Course", " 10: Written and Oral Communication in Data Science May, 2022 About this Course This course is part of a series of courses for DataTrail. DataTrail is a no-cost, paid 14-week educational initiative for young-adult, high school and GED-graduates. DataTrail aims to equip members of underserved communities with the necessary skills and support required to work in the booming field of data science. DataTrail is a fresh take on workforce development that focuses on training both Black, Indigenous, and other people of color (BIPOC) interested in the data science industry and their potential employers. Offered by the Johns Hopkins Bloomberg School of Public Health, in partnership with local non-profits and Leanpub, DataTrail combines a mutually-intensive learning experience (MILE) with a whole-person ecosystem of support to allow aspiring data scientists and their employers to succeed. DataTrail uses mutually-intensive learning DataTrail joins aspiring data science scholars and expert-level data scientist mentors in a mutually-intensive learning experience (MILE). In the DataTrail MILE: Scholars engage in cutting-edge technical and soft skills training needed to enter the data science field. Mentors engage in anti-racism and mentorship training needed to be impactful mentors and informed colleagues on diverse data science teams. The social connections created along the way will fuel job opportunities for scholars and foster a more diverse, equitable, and inclusive climate at the mentors’ institutions. "],["types-of-communication.html", "Chapter 1 Types of Communication", " Chapter 1 Types of Communication At this point in the Course Set, you’ve mastered Google Products and version control with GitHub. You’ve become comfortable working with data in R, understand the importance of tidy data, and know how to visualize your data to better understand it. These are all incredibly important skills for a data scientist; however, having these skills is simply not enough. Another crucial skill set for a data scientist to master is that of communication. The most interesting results in the world are only the most interesting results in the world if the world knows about them. To ensure that your interesting results move effectively from your brain and computer to the brains of the rest of the world, we’re dedicating an entire course to data science communication. In this course we’ll discuss the various ways in which data scientists regularly communicate and provide details on how to master each of these types of communication. We’ll start in this lesson by providing an overview of the many types of communication. The rest of the lessons will then describe in detail the considerations to make when executing each of these types of communication. 1.0.1 Opinionated Communication Before we dive into the various types of data science communication, let’s take just a second and talk about opinionated software development. When people talk about software being opinionated, it means that the piece of software forces you to do things their way. For example, if you’re familiar with the company Apple, they develop opinionated products. For example, on an iPhone, the general appearance from one iPhone to the next is very similar and there is often only one way to accomplish a task (for example, to open an app, you click on the app on the touch screen). This simplifies things for the user, since there’s generally only one way to accomplish a task. It also allows one iPhone user to quickly figure out how to work someone else’s iPhone. Alternatively, un-opinionated software is a lot more flexible. Un-opinionated software allows developers to accomplish goals in many different ways, allowing different styles and approaches to be implemented. Let’s use an arrow as our example. Say I was teaching you to draw an arrow. If I only allowed you to draw one type of arrow, that would be an opinionated approach. If, however, you were able to draw lots of different arrows, that would be an un-opinionated approach. While the second approach is more flexible and provides more options, simply knowing how to draw one arrow is enough to get you started! For the purposes of the lessons in this course, we’re going to be very opinionated. By using this approach, we can provide you with the necessary information for effective data science communication without providing tons of caveats or confusing alternative approaches. We’re going to provide you with tips and details that have worked for us over the years as data scientists. However, this does not mean this is the only way to do things! We are confident that the information we’re providing is a good place to start; however, in practice, your style and approach to communication will evolve over time to best suit you, and that’s great! We recommend giving our approach a try at first. Then, as you gain experience, you can allow your own style to develop over time into whatever works best for you. Additionally, we’ll do our best to provide links in each lesson to others’ thoughts on the topics we’re covering. This way, if you have time (either now or in the future), you’ll be able to see how others approach data science communication! 1.0.2 Types of Communication Effective data science communication should always communicate your message clearly to your intended audience. This can be accomplished through a number of different types of communication. In this lesson we’ll be discussing the following general types of data science communication: Reports Presentations Blog Posts Meetings 1.0.3 Reports Data science reports are a written form of communication used to summarize a data science project through text and figures. Written reports should always tell a story. What we mean here is that a finished report should have a beginning, middle, and an end. It should start with the question you’re answering and relevant background information (the beginning), continue with what you did for the project, which will often include both plots and text (the middle), and finish with a summary of your results (the end). Reports are most often sent to your teammates or manager to communicate what you’ve been working on. 1.0.4 Presentations Presentations also tell a story; however, they do so in a different format and for a different audience. Presentations are generally comprised of slides with images and text on them that you present orally; however, they can include brief videos or GIFs as well. The audience for a presentation is generally larger than those who read your report. Presentations can be made to groups of individuals at your company or to a group of attendees at a conference. 1.0.5 Blog Posts Blog posts are an effective way to reach a wide audience. Like reports, these also tell a story through text and figures; however, rather than update co-workers on your progress for a project at work blogposts are often on topics that are more helpful to a general audience. Data science blog posts are generally either “how to” posts that teach others how to do something related to data science or are “analysis” posts that summarize a cool analysis. Writing blog posts on your website or personal blog can be a great way to share you work with others in the community you don’t typically work with directly. 1.0.6 Meetings Data scientists often find them in a number of meetings. Meetings can be with team members where you discuss the plan for a project. Or, they can be with someone who’s less familiar with data analysis but wants your help. Further, data scientists can end up in larger meetings with groups of people in a company where they as the data scientist are the only person familiar with the data or analysis in the room and are expected to communicate results to everyone. As a participant in all of these cases, it’s the job of the data scientist to communicate effectively with others in the room. In lessons in this course we will discuss how to communicate effectively in meetings as well as discuss how to both run a meeting and how to participate in someone else’s meeting. 1.0.7 Slides and Video Types of Communication Slides "],["data-science-reports.html", "Chapter 2 Data Science Reports", " Chapter 2 Data Science Reports The goal of a written report is to effectively communicate your full analysis to your readers. This means that your writing should be clear, your figures should be helpful, and your audience should be able to understand what you did to reach the conclusions your presenting. In the Course Set thus far we’ve discussed Markdown and RMarkdown documents. We’ll continue to use this format throughout this lesson. We won’t discuss the basics of RMarkdown, however, as that has been covered in an earlier lesson. Specifically, in this lesson we’ll discuss what to include in your data science reports, using the RMarkdown format to guide us. 2.0.1 What To Include Every data science report should include the following elements: A Title An Introduction How you analyzed the data Your results Any conclusions All references 2.0.1.1 The Title The title of your report should be as informative and as short as possible. The title should let readers know what question is being answered in the report and the answer to that question. But, details should be left to the report itself. For example, what if you had completed a project analyzing the NHANES dataset? Which of the following titles would be better? “Analyzing NHANES” “Data from the NHANES study shows that diet is related to overall health” Well, “Analyzing NHANES” is shorter, but it’s not informative at all. Rather “Data from the NHANES study shows that diet is related to overall health” is an informative but concise title that lets readers know that the data science question being asked as to do with diet and health as well as letting readers know that there is a relationship between diet and overall health. How about another example – which title is best out of the following?: Public Data and Prediction Improving the Value of Public Genomic Data with Phenotype Prediction Using Public Genomic Data Phenotype Prediction is Helpful Sample Genomic Data that Are Available Publicly on the Internet Can Be Used For Prediction of Critical Phenotype Information Let’s first talk about which one is the best title. Then we can discuss the issues with the other possible titles. “Improving the Value of Public Genomic Data with Phenotype Prediction” is the best title here. Even if you don’t know what genomic data are or what a phenotype is, you know that publicly-available data are going to be used for some type of prediction. And, you know that in this presentation you’ll learn about what genomic data and phenotypes are. As for the other titles, “Public Data and Prediction”, “Using Public Genomic Data”, and “Phenotype Prediction is Helpful” are short but not fully informative. They don’t tell you what the question and the answer of what will be included in the report are. On the other end of the spectrum, “Sample Genomic Data that Are Available Publicly on the Internet Can Be Used For Prediction of Critical Phenotype Information” tells you the question and the answer but it does so in a very long and windy way. This title is too long and confusing and should be edited before being used in a report. In your your R Markdown document where you’re writing your report, you’ll want to include a helpful title. The title of your report can always be edited in the YAML of your R Markdown document. {format: png} 2.0.1.2 The Introduction After your title, your report should include a brief introduction to your report. This section should include the motivation for your project. Any necessary background information explaining the why you’re writing this report would be included here. Additionally, let the readers of your report know explicitly what question you’re answering with this analysis. Be as clear and concise as possible Finally, this section should include a description of the dataset you’re using. How many people are included in your dataset? What variables are included? A description of your dataset is a critical (but often overlooked) portion of a good introduction In your R Markdown document, an H1 header (#) can be used to demarcate this new section. Then, Markdown format can be used to include all the necessary information in your Introduction. {format: png} 2.0.1.3 The Analysis After introducing the motivation for your project and the data you’ll be using, you’ll want to describe your approach. This section should explain what methods you’ll be using to analyze your data (including references to any methods used - details below on how to do that!). If the introduction section answered why you’re writing this report, this section should answer how? and what?. How did you analyze these data? What methods did you use? In your R Markdown Document, this can be separated using a new H1 header. Throughout your report, additional subheadings can be demarcated using H2 (##) headers. {format: png} Code to complete your analysis would be included here, if appropriate. Not everyone wants to look at the code you ran. For example, your manager may just want a summary of your analysis. In this case you wouldn’t include all your code. However, a teammate may want to see all the details. As above, different parts of your analysis should be separated by different headers and separate code chunks for each part should be included. Text briefly explaining each what is being done in each code chunk should be included before each code chunk. Results from the code chunk can be explained with text after the code chunk and before the next section. {format: png} 2.0.1.4 The Results After describing how you’ve analyzed the data, it’s important to describe the results from your analysis and explain them. Simply putting tables and figures in this section is not enough. Explanations to guide the reader and help them understand the results in this section are required. A reminder that all results that for every numeric estimate reported, there should be a corresponding measurement of uncertainty included. And, for every plot, best practices should be followed. These were discussed previously in the data visualization course, but as a general reminder here: colors used on any plot should be distinct from one another colors should be chosen such that figures are interpretable by individuals who are color-blind all axes and text on figures should be large enough the appropriate plot for your data should be used explain as much on the plot itself as possible with annotations to guide the reader If you want to generate the plot in your R Markdown document (you want the code to be evaluated) but do not want the code or its output to be displayed, you would include include=FALSE in the code chunk. (Note that results =\"hide\" hides output but displays code, echo=FALSE does not show the code but does display any results or output, and eval=FALSE displays the code but doesn’t actually evaluate it (does not run the code)) {format: png} Tables of results would also be included in this section. Guidelines previously discussed for good tables should also be followed. To briefly summarize: comparisons should be made top to bottom rather than left to right The number of digits displayed should be limited Tables should be organized to help guide the viewer to see what is important {format: png} 2.0.1.5 Conclusions After discussing how you analyzed the data and proving readers with the results of your analysis, it’s important to summarize the findings and conclusions from your analysis for the reader. In this section, be sure to clearly explain the most important things you want the reader to take away from this analysis. Typically, figures and tables are not included in this section. Bullet points can be used to make your points stand out in this section. Be sure not to make this section any longer than is absolutely necessary. {format: png} 2.0.1.6 References In all of your work it’s important to give credit where credit is due. This is important for two reasons. Most importantly, it gives credit to others for their work and their ideas. Second, it let’s others know where to look to learn more (and reminds future you of where you found the information originally, which can save you a lot of time). 2.0.1.6.1 Hyperlinks At the very least, it’s helpful to include hyperlinks in Markdown format to others’ work within your R Markdown document. As a reminder the Markdown format for a hyperlink is: [text to display](https://url_to_reference.com). Including hyperlinks is the way to go when you’re linking to information on the Internet, such as general websites or blog posts. For example, if we mentioned in our report that “All analyses were carried out in R,” we’d want to hyper link to the R Project’s website, so that anyone unfamiliar with R could click on this link and learn more {format: png} 2.0.1.6.2 References However, when linking to scholarly articles, the best approach is to use an external bibliography that will automatically populate the references used in your analysis and include them in your report. We’ll walk through how to do that now! For example, consider our general report where within the Data Analysis header of our Methods portion we stat that “We’ve used ggplot2 to generate all figures in this report.” In that case, we’d want to include a reference to ggplot2! {format: png} To do so we’d first go to Google Scholar at scholar.google.com. Google Scholar contains scholarly articles across many different fields. References to articles, theses, books, abstracts, and academic journals are all searchable on Google Scholar. In the search box type ‘ggplot2’ and then click the magnifying glass to search Google Scholar. {format: png} When we searched, the first link references the ggplot2 book. This is the reference we want to include in our R Markdown document. To do so, we’ll first save it to our Google Scholar library by clicking on the “star” icon. {format: png} You can then go to your library by clicking on “My library” in the top right-hand corner. {format: png} Any entries in your library will be listed here. Click on the references you’d like to include in your document using the checkmarks at left (here, we’ll only select the ggplot2 reference). Then click on the download icon and select “BibTeX” from the dropdown menu. {format: png} The citation(s) selected will then appear in a new window. Copy this text. Note that the first thing within the curly brackets is how we’ll refer back to this later in our R Markdown document. {format: png} Then, return to RStudio Cloud and click on “File” &gt; “New File” &gt; “Text File”. {format: png} We’ll then want to save this file. Do this by clicking on “File” &gt; “Save As” {format: png} We’ll save the file as “references.bib.” Type that into the File name box. Then click “Save” {format: png} Once the file is saved, you’ll want to paste in the reference text you previously copied and save the changes to this file. {format: png} You’ll then have to specify within your YAML (the top of your R Markdown document) what the name of your bibliography file is using the format you see here: {format: png} Note: The .bib file must be in the same directory as your .Rmd file. Now that our bibliography is set up, we’ll add the reference into our document. References use the following format [@identifier] They always include square brackets. Within the brackets we specify that it is a reference using the @ symbol, followed by the identifier specified within our .bib file. Here that identifier is wickham2016ggplot2. {format: png} To finalize this document, we’ll want to include a header at the end of our R Markdown document, since any references will be automatically added to the end of the Knit document. {format: png} Now we’re ready to Knit. When we Knit this document, we see our in-line citation and the reference automatically add to the end of the document! {format: png} While there are a lot of steps in this process, it’s important to include references to others’ work when applicable and this process will get simpler the more you do it! 2.0.2 What to Avoid Now that we’ve discussed what to include in your data science reports, let’s briefly discuss what you should avoid. In generating data science reports, you should avoid: explaining every single analysis you tried - only include the necessary analysis and results being too wordy - keep it simple and concise. Avoid unnecessarily long sentences. Be clear in your explanations. using the wrong type of plot – If your data are looking at the relationship between two numeric variables, consider a scatterplot. If you’re comparing values between five different groups, use a barplot (not a pie chart). Be sure you’re appropriately representing your data. presenting bad figures - consider the colors, be consistent with them throughout your presentation, and make sure all text on figures is large enough using gratuitous flourishes - 3D figures may look cool to some, but they can often be hard to interpret. Use faceting to avoid unnecessary 3D figures. Make sure anything you add to your plots helps the reader understand your analysis and does not detract from it. 2.0.3 Brief Reports Above we walked through portions that should be included in a data science report. All of these components should be included in a brief report; however, for a brief report (often referred to as an executive summary), you would limit the details included in the report. For a brief report, the nitty-gritty details of the dataset you used would be omitted. Similarly, you wouldn’t include all the code you used to analyze the data. Your results would only present the most essential tables and figures. And your conclusions would only include the essential take-aways. You would still include and introduction, a description of your analysis, results, and a conclusion. In other words, your brief report should still tell a story. It just does so in a shorter document with fewer details. 2.0.3.1 Sample Brief Report To understand exactly what a brief report is, let’s return to a data set with which you’re already familiar and walk through an example of a brief report. In the data tidying lessons in this Course Set, you were introduced to a dataset that included survey data from Americans about how they prefer their steak prepared. We’ll return to that dataset to walk through an example of a brief report that sets out to answer the question: How do Americans prefer their steak to be prepared? In this example, you see the R Markdown document on the left and then, once we knit the R Markdown document, the brief report that could be shared with others on the right. Specifically we see that, the report itself is pretty short, that only the necessary details are presented, and that everything the reader needs to know is presented clearly. For the purposes of this example there weren’t many details in the means of what we did for the analysis in total; however, for most projects you will likely have a slightly longer analysis or fewer results. {format: png} 2.0.4 Full Report Alternatively, a full report would include the in-depth details of your analysis. This would include details about the data used, a longer explanation of your analytic approach, and the code used to generate your results. A few more figures and tables would likely be included in the results section of a full report. Again, just like a brief report, data science reports should always tell a story. The motivation behind the report, the analysis that was done, and the conclusions drawn should always be included. 2.0.4.1 Sample Full Report Returning to the steak preference data and the question “How do Americans prefer their steak to be prepared?,” we’ll now take a look at how a full report for this analysis could look. While this analysis is simpler than most analyses you’ll likely be doing, we’re using it as an example to demonstrate that a full report will likely have more explanation and more details than a brief report. There will be more description regarding how the analysis was carried out and likely more tables and figures. Here, we see the full report is similar but goes into more detail and presents more results than the brief report {format: png} Note: The code used to generate these reports can be viewed on RStudio Cloud here. 2.0.5 Summary In this lesson we’ve discussed what should be included in all reports and what should generally be avoided. We’ve described how to generate reports in R Markdown. And we’ve discussed brief reports (also known as executive summaries) and full reports as well as the differences between the two. As a data scientist, you’ll likely have to generate reports throughout your career, and now you have a good baseline from which to start! 2.0.6 Additional Resources Chapter 9: Written analyses in Elements of Data Analytic Style, by Jeff Leek Bibliographies and Citations in R Markdown documents, from RStudio 2.0.7 Slides and Video Data Science Reports Slides "],["how-to-give-a-presentation.html", "Chapter 3 How To Give a Presentation", " Chapter 3 How To Give a Presentation Data Scientists are often asked to present their work. This could be in a meeting with other co-workers or at a large conference amongst colleagues with similar interests. Regardless of where you’re presenting, there are general and important guidelines to consider when preparing the materials for your presentation. In this lesson we’ll cover what to consider when preparing a slide presentation, guidelines for creating good slides, and tips for presenting material well. This lesson is largely based off of our experiences and the tips from Zach Holman. Links to his work directly can be found at the end of this lesson. This lesson will be focused on how to give effective slide presentations, like what you could generate in Google Slides. These guidelines, however, will likely prove beneficial for any oral or visual presentation you may have to give as a data scientist. 3.0.1 Presentation Goals Generally, there are three goals of any presentation. A good presentation should inspire, educate, and entertain. Those listening to your presentation should leave the room feeling like they learned something, with the urge to try something new, and having enjoyed learning whatever it is you presented. If those three goals are accomplished, you have without a doubt delivered a stellar presentation. {format: png} 3.0.2 Know your Audience In order to inspire, educate, and entertain, the first thing you must consider is your audience. For presentations, people often say you must know your audience. If you have a room full of analytical people (mathematicians, accountants, scientists, etc.), you should consider presenting data and numbers. Conversely, if you are presenting to a room full of creatives (artists, photographers, writers, etc.), it’s likely best to ensure that the graphics you present are visually appealing. You should always keep your audience in mind while preparing a presentation. 3.0.3 Mind your Audience After considering your audience and designing your presentation to be most appropriate for those listening, you must always stay within your allotted time. Out of respect for the time of others in the room and for others who may also have information to present, this is essential. If you have 5 minutes to talk, stop at or before 5 minutes. If you have 20 minutes to speak, stop at or before 20 minutes. Your audience will tune out if you go over your time limit or you’ll be told to stop by someone else in the room. It’s best to avoid either of these situations and respect the time of those in your audience. Always stay within your allotted time. 3.0.4 Prepare Putting together a good presentation takes time. Be sure to leave yourself enough time to put a good story and beautiful slides together. 3.0.5 Tell a Story With those goals and your audience in mind, you’re ready to start considering how you’re going to go about presenting information to your audience. As mentioned in a previous lesson, when you’re giving a presentation, you’re telling a story. When presenting, you’re telling a story with and introduction, a middle, and an end. It’s best to outline your presentation before you start preparing slides. This includes jotting down or at the very least thinking about what you’ll convey to your audience and how you’ll make it into a story. You may consider a number of questions: What story do you want to tell? What do you want to convey in your introduction? What pieces are necessary to the story to be included in the middle? What do you want your listeners to take away from your presentation? How will you include this information in your conclusion? All of these are good questions to consider when outlining your talk. {format: png} Finally, as Zach Holman explained in his talk on talks, the best talks are stories and the best stories use repetition. It’s ok to repeat important information to your audience. Don’t be afraid of repeating yourself to make a point clear to your listeners. 3.0.6 Slide Design Now that you’ve outlined what you’ll talk about in your presentation, it’s time to decide how you’re going to put those ideas onto slides. There are many things to consider when designing visually-appealing slides. We’ll discuss the most important in this lesson. 3.0.6.1 Text A few guidelines when deciding the words you’ll include on slides: limit the number of ideas on a single slide limit words on slides encourage listening (limit reading) include references on the slides directly (and at the end!) Do not try to cram all your ideas onto a single slide. And, everything you say does not have to be up on the slides. You’re speaking for a reason. The slides should help guide you along in telling your story, but your audience should have to listen to what you’re saying to get the full picture of your story. 3.0.6.1.1 Fonts To convey textual information to your audience, choosing a good font is important. It’s generally safe to stick to Sans Serif font. Sans Serif fonts can be searched through at Google Fonts. And, when in doubt, Helvetica is a safe font choice. Further, use consistent fonts throughout your talk. More than one font can be used to draw viewers attention to something, but typically there should be a consistent font used throughout the presentation. Finally, as with most rules, there are exceptions, so take time deciding on what font looks best for each part of your presentation. {format: png} 3.0.6.1.2 Size Regardless of what font you choose for your text, your text should be very large. It’s often argued that you should design your slides for the back of the room. {format: png} The same goes for images. There’s no need to leave empty space on your slides around images. Expand your images to take up as much space on the slide as possible. {format: png} 3.0.6.2 Colors Finally, with regards to slide design, colors matter. Choosing a dark background (such as dark gray) means that your text should be light (maybe white). If your background is light, your text should be dark. Contrast will make it easier on your audience to read. {format: png} Additionally, use color to focus on text you want your audience to focus in on. If all your text is white, highlight a few words in a brighter color to draw your listener’s attention to what’s important. {format: png} The same goes for figures and plots. All images should have colors that are viewable and distinguishable by every person in your audience. Consider color blindness. Consider colors that tend not to project well (such as yellows or light pastels). Then, design your slides using colors that will work for your audience. 3.0.6.3 Alignment Visually, things should be aligned. Center things in the middle of your slide. Make sure text boxes that should line up do line up. It may seem trivial, but it’s important to line things up so viewers aren’t distracted by something like alignment and can instead focus on your talk. {format: png} 3.0.7 Presenting When it comes time to give the presentation, there are a few things to keep in mind. First and foremost, speak clearly. Whether you are a loud-talker, a soft-speaker, someone who speaks slowly, or a fast-talker, the most important thing is to make sure that the words you say are clear to your audience. Second, you should be excited. If you’re not excited or passionate about what you’re talking about, why would your audience be? If you’re not excited, it may be best to reconsider your outline and re-work your story until you are. To avoid being boring during your talk, you can vary the speed and volume of your voice. You can move around so you’re not always in one place. And, you can use pauses effectively. It’s ok to not speak every second that you’re up there. You can pause and give your audience some time to look at a graph before you talk about it. Silence for short periods of time is allowed! Finally, be yourself. If you naturally like to tell jokes, tell jokes during your presentation. If stories are more your style, work a story or two in. Ultimately, if you’re not comfortable in front of your audience, check to make sure you’re being true to who you are as an individual. {format: png} Finally, when presenting it’s important to remember that you’ve seen the data and figures you’re presenting many times, but your audience has not. They’ll need time to get up to speed! Thus, it’s important to always introduce your axes (tell your audience what is on the x-axis and what is on the y-axis), explain the colors on your plot, and walk the audience through the figure you’re presenting. {format: png} 3.0.8 Practice Most people are hesitant when it comes to speaking. They’re nervous about getting up in front of a crowd. If you find yourself being nervous to make a data science presentation, know that you’re not alone. For those who are nervous to speak publicly, nerves may never go away completely, but there are ways to limit your nerves. Practicing your presentation is one of the best ways to limit nerves during your presentation. You should present out loud to yourself. Recording yourself and listening can help too (even if it is sometimes painful)! In addition to limiting your nerves, practicing will help you figure out the best way to explain the details included in your presentation and will ensure that your presentation does not take more time than you have been allotted. The further along you are in your career, the less you will likely have to practice before presentations. However, as you get started, practicing is the best preparation for giving a talk! {format: png} 3.0.8.1 Be Prepared The day of your presentation, things may go wrong. Power goes out, projectors don’t always present your material exactly the same way it looks on your computer screen. Technology doesn’t always behave as we expect it too. In these cases, you just have to roll with the punches. To avoid any big issues, it’s best to bring a copy of your talk on a USB drive, carry any adapters you may need should you have to (or choose to) present from your own computer. Don’t expect the location to have the adapter you need. And, be sure your phone is on silent. After that, just roll with anything that goes wrong. The audience will be forgiving, as they all know that technology can sometimes act unexpectedly. {format: png} 3.0.9 Handling Questions After your presentation, there may be time allotted for the audience to ask questions. When answering questions, always take a little bit of time to pause and think about the question before answering. In fact, it’s often helpful to repeat the question asked of you back to the audience. This ensures that the entire room has heard the question and gives you some time to think. If you need more time, remember, silence is ok! Finally, if you don’t know an answer, it’s ok to say “I don’t know.” You should never make up an answer because you’re afraid of saying “I don’t know.” {format: png} 3.0.10 Example Presentation: APIs To walk you through an example of a data science presentation, we’re going to use a talk presented at a statistics conference by Lucy D’Agostino McGowan, a well-known biostatistician and R programmer. The slides used in the talk and a video of the talk itself (!) can be found here. The title of Lucy’s talk was “Harnessing the Power of the Web via R Clients for Web APIs.” In this talk she discussed accessing information from APIs using the httr package. So, if you need a refresher on this topic, the slides and video here would be a great reference! But since you’re already been introduced to the information in this talk in a previous lesson, in this lesson here, we’ll focus on discussing the layout of the talk, the design of the slides, and how Lucy delivered her actual presentation. 3.0.10.1 Talk Outline In the introduction, Lucy expresses her excitement and gives her audience an outline of the talk. The three topics she’s going to cover are: What is an API? How are APIs accessed from R Case studies. {format: png} We didn’t discuss this above; however, a general rule of thumb is that three main topics is about the most you should include in a talk, as humans’ attention spans are not very long. Lucy nailed this one with exactly three main topics to discuss, all of which tie together into a story about how to get information from Web APIs! 3.0.10.2 Slide Design As Lucy dives into the content of her talk, she follows many of the best practices discussed above. We’ll pull a few slides from the talk to discuss here; however, do reference the whole talk to see it in its entirety! Lucy uses large fonts and colors that can be distinguished by anyone in the audience and that present well. As a result, everyone in the room, no matter where there seat was, was able to learn and be entertained. {format: png} Additionally, Lucy uses effective highlighting of text using different colors. Here, the parts of the text that Lucy wants the audience to focus on are in a brighter blue and a brighter green! Also note that there is not a lot of blank space on the slides. {format: png} Additionally, Lucy’s slides guided what she was going to say but didn’t include all the words on the slides. Here, we see large font and large images but no words. This allowed the audience to listen to what she was saying rather than read all the words on the slides! {format: png} 3.0.10.3 Presentation In addition to having well-designed slides, Lucy was excited as she spoke, was clear in her speech, spoke at an easy-to-listen-to pace, and her personality came through as she spoke. This is all evident if you listen to the video of her presentation. Lucy being true to her personality helps make it a wonderful presentation. If your personality is different than Lucy’s, that’s totally ok! Just be sure that when you present, you’re presenting in a way that you’re most comfortable! 3.0.11 Example Presentation: Analysis Lucy’s presentation is an example of a wonderful, educational, and helpful talk; however, her goal wasn’t to talk in depth about an analysis she’s done. Often, as a data scientist, you’ll be tasked with presenting an analysis you’ve done. To do so, you’ll want to use the same guidelines previously discussed in this lesson, but with a focus on presenting the story of your data analysis. This includes the plots, analytical approach, and findings of your project. That said, your slides should still be well-designed, you should still tell a story, and your text and colors should all be readable when projected; however, in this case, there are a few additional caveats to consider. To discuss these, we’ll use an example presentation from Julia Silge, who is a data scientist at Stack Overflow and a wonderful presenter. In 2017 at the rstudio::conf, Julia Silge presented “Text Mining the tidy Way”. The video and visuals from her presentation are available online. This talk discusses the tidytext package (which she and David Robinson developed) and example analyses using this awesome R package. We’ve discussed this package previously, but if you want a refresher on tidytext, how to work with textual data, and sentiment analysis, this is a great resource! As above, we’ll highlight a few slides from the talk and discuss considerations to make when presenting a data analysis. 3.0.11.1 Talk Outline As in Lucy’s talk, Julia Silge, in addition to an introduction and a conclusion, had three main parts to her talk: tidytext package Jane Austen example NASA example In data analysis talks, it’s often best to start with background information. Julia covers this information when discussing what the tidytext package is. Then, she delves into discussing a few examples of the types of analyses you can do with this package. 3.0.11.2 Slide Design As discussed above with Lucy’s presentation, in Julia’s slides, she limits the amount of information she puts on any one slide, thus allowing the audience to listen to the words she’s saying. And, she has text that’s large enough and legible when projected. However, what’s different about this presentation is how Julia presents her analyses. When presenting an analysis, it’s generally best to first explain the approach and then present the results. For example, Julia uses TF-IDF to analyze text in Jane Austen’s novels. She first explains what TF-IDF is. She includes the bare minimum amount of information on her slide, so that her audience is only seeing what’s necessary. Then, she verbally describes what TF-IDF is. {format: png} On subsequent slides she includes the code she used to run the analysis, discussing what is going on with the code on each slide and describing the output. {format: png} Finally, for each part of her analysis, she includes a visualization of the results. These figures have text large enough to be seen by all in the audience, are well-labeled, and include an informative title. {format: png} Note that Julia does not go into every single detail of every analysis, nor just she talk about all the things she tried in a single presentation. She includes enough information so that her audience learns and can go try this type of analysis on their own, if they’re interested! 3.0.11.3 Presentation Watching the 18 minute video will give you the best sense of how Julia presented the information in her tidytext presentation; however, we’ll highlight a few things here. {format: png} Julia spoke at a reasonable pace and clearly, keeping her audience interested. Additionally, she presented true to her personality. Julia and Lucy are two different people and that is clear in their presentation styles. Differences are wonderful and help keep presentations interesting! It would be boring if everyone were the same. Additionally, Julia knew her audience. She knew that there would be many programmers in her audience, and that most of them would be familiar with the R programming language. Thus, she didn’t need to explain what the R syntax was. She could put R code on her slides, and her audience would successfully follow along. But, she knew that not everyone has worked with the tidytext package. Thus, she focused her time here, discussing the purpose of and basics on how to use the tidytext package and provided clear examples of analyses using this package. When outlining and preparing presentations, always consider your audience. If your audience is more technical, include more details about how you did the analysis. If they’re less technical, be sure to explain what you did at an appropriate level. And, of course, always make sure your figures are clear, regardless of your audience. Additionally, we’ll note that at around 17:45 in the presentation, Julia went to show an image but it didn’t immediately show up how she had intended. This is a great example of rolling with the punches. She didn’t panic. She simply acknowledged that it didn’t work the first time and tried again. The audience, of course, didn’t mind, but when you’re presenting, these small occurrences can feel like a big deal. When it happens to you in the future, know that things don’t always work as anticipated and that this happens to everyone. If this happens to you, take a play out of Julia’s book and simply acknowledge what happened, try again, and continue on! {format: png} 3.0.12 Summary In this lesson we’ve discussed the important pieces to designing and presenting your data analysis project. Always be mindful of your audience, create good slides, and present your ideas clearly. Practicing your presentations will help, especially when you’re first giving talks. 3.0.13 Additional Resources 3.0.13.1 Presentation Guidelines The Talk on Talks, by Zach Holman speaking.io, Thoughts on Public Speaking from Zach Holman VIDEO: Your (first) talk, by Steph Locke How Typography Determines Readability: Serif vs. Sans Serif, and How To Combine Fonts, by Harshita Arora Google Fonts 3.0.13.2 Presentation Examples Harnessing the Power of the Web Via R Clients for Web APIs, by Lucy D’Agostino McGowan Text Mining the tidy Way video visual, from Julia Silge 3.0.14 Slides and Video How To Give a Presentation Slides "],["how-to-present-to-a-general-audience.html", "Chapter 4 How To Present to a General Audience", " Chapter 4 How To Present to a General Audience In the last lesson we discussed general guidelines for presenting data science projects and discussed the fact that considering who is in your audience is essential. In this lesson we’ll break that down a little further to discuss how to approach presenting a data science project to a general audience and what considerations to make when preparing such a presentation. (In the next lesson we’ll dive into presenting to a technical audience.) 4.0.1 The Audience When considering presenting to a general audience, this would be an audience that doesn’t know a lot about data science or quantitative analysis. This would be an audience that generally does not code or analyze data on a regular basis. This could be individuals at your company who are more focused on day-to-day operations or an audience of high schoolers getting their first introduction to data science. 4.0.2 The Goal Regardless of exactly to whom you’re presenting, the goal of this type of presentation is to teach at a high level what you did. Your presentation should still inspire, educate, and entertain, but it should leave out some of the nitty gritty details and keep in more background and general explanation of your approach. 4.0.3 The Presentation When it comes to presenting this information, the slide design guidelines discussed in the last lesson are still pertinent; however, there are considerations to be made when deciding what to talk about, how much detail to include, and what to emphasize. 4.0.3.1 Emphasize When presenting to a general audience you want to emphasize a number of different things. Your presentation should certainly still tell a story, but you may want to spend more time on background and introduction than you would to a more technical audience. In your introduction you want to be sure to include: why you did the analysis why your audience should care what specific question you set out to answer A large focus of your presentation will likely be in this section of your talk. This will provide your audience with the necessary information to understand the rest of your presentation. It’s ok to spend more time on the beginning of your talk when addressing a general audience. In the body (middle) of your presentation, you should always: describe the data explain what you did provide results explain limitations or caveats With regards to a general audience, the details of this part of the presentation should not be the focus. You never want to lose your audience because you’ve left out important explanations or assumed they know more than they do. So, be sure to be clear in your explanations for this part and refrain from including every single detail of what you did. At the end of your presentation, it can be helpful for a general audience to: include a conclusion slide tell them exactly what they should take away from your presentation 4.0.3.2 De-emphasize In a presentation to a general audience, you should de-emphasize: details of your approach issues you ran into in your analysis IF we were to summarize this graphically, where the size of each box is relative to how much you should emphasize it in your presentation, the introduction and background will likely be the bulk of your talk, whereas the details you include about your analysis may be less. Your conclusion will be succinct and wrap everything up for your audience. {format: png} Remember, your audience will be hearing a lot of this information for the first time. There is only so much any individual can learn at once! Because of this, be sure to focus on the introduction, including the question you asked and the necessary background information. While you will certainly provide your audience with what you did and what you found, you will keep the details here to a minimum. Avoid including details about things that confused you along the way. Then, in your conclusion, remind your audience of your conclusions and provide them with the most important message they should take away from your presentation. 4.0.4 General Presentation Example To discuss giving presentations to a general audience using a specific example, we’re going to walk through a presentation that was given to a general audience. The audience for this presentation was college students with a year of calculus but no particular background in statistics. This means that any statistical concepts would have to be explained, but it could be assumed that the audience was fairly analytical. The slides for this talk can be viewed here. The title of this talk was “Upcycling genomics data: From publicly-available ‘junk’ to priceless ‘treasure’.” The outline of this presentation was as follows: Introduction Part 1: recount Part 2: phenopredict Part 3: application Conclusion Click on this link and scroll through the slides to get an idea of what the presentation looked like (Additionally, a quiz question for this lesson will require you to open this link, so it’s best to just take a look now!). The content of the talk is not what we’ll be focusing on, so it doesn’t actually matter if you look at these slides and understand what they’re talking about. Rather, in this lesson, we’re going to walk through how this presentation was organized and designed to focus on a general audience. In the next lesson, we’ll walk through the slides for a talk on the exact same topic, that that was designed and presented to a technical audience. To walk through how this talk was organized, we’re going to use the following figure: {format: png} Each slide in the presentation was assigned to one of 7 categories. Each category is a different color on the figure: Question - the motivating question used to tie the story together Outline - to remind the audience what we’ve already discussed and what we’re about to discuss Background - Information the audience is required to know in order to understand the project/analyses Approach - How the data were analyzed Teaching - A quick lesson about a specific topic to ensure the results make sense to the audience Conclusion - The end of the slides, wrapping up the presentation {format: png} The bar in the middle shows how the categories break down throughout the presentation. At the left we have the title slide. All the way at the right we have the conclusion slides. In between, the width of each section is proportional to the number of slides included in the presentation. The wider the box, the more slides. The thinner the box (or line), the fewer slides in the presentation were dedicated to that category at that point in the talk. {format: png} The last bit about how to read this image is that above the colored boxes, you can see the percentage of the slides dedicated to each part of the talk. For example, most of the slides (51%) were used in Part 2 of the talk. This makes sense, as the focus of the talk was on “phenopredict.” {format: png} Now that we know how to read this figure, let’s discuss a bit of what we see. First of all, there is a heavy focus in the first part of the talk on discussing necessary background information. As this is a general audience, that makes sense! {format: png} In the middle of the talk, a lot of time is dedicated to teaching the audience the necessary concepts and information and explaining (at a high level) what approaches were used in the analyses. {format: png} Note that while results are presented, it’s not in great detail. The audience is taught what they need to know before results are presented. This ensures that nobody gets lost. {format: png} Additionally, in this talk, a motivating question was presented to the audience to fully explain why this work was necessary. By motivating the presentation with this question, coming back to it throughout the presentation, and then using the data and analysis presented in this talk to answer the motivating question at the end, the presentation becomes a story. {format: png} Lastly, an outline was used throughout the presentation to remind the audience what has been discussed and what was yet to come. {format: png} When all was said and done, if we were to calculate the percent of slides dedicated to each of the categories, we would see that the category with the largest percent of time spent is background information, with 30% of the total slides being spend on it. {format: png} However, if we consider background, teaching, and explaining the approach, we see that about 65% of the time was spent providing information to the audience that had nothing to do with the specific new information being presented about this analysis. {format: png} This makes sense, because, as you’ll remember, the goal of a general audience presentation is to teach your audience what you did. It’s not about the nitty gritty details. Instead, you want to present information at a high level. Here, we’ve presented an example of one presentation. This is to describe how presenting to a general audience can be done. This does not mean that every time you present to a general audience, exactly 30% of your time should be spent on background. Rather, this is to give you an idea of how to approach a general audience presentation. 4.0.5 Summary In this lesson we discussed the approach to and specifics of presenting to a general audience. We walked through an example of a presentation used to present to a general audience and broke down what parts of that example presentation were spent on what aspect of presentation. We highlighted the need to present background information and the need to teach the audience necessary concepts (at a high level!) so that the results you present will be understood. 4.0.6 Slides and Video How To Present to a General Audience Slides "],["how-to-present-to-a-technical-audience.html", "Chapter 5 How To Present to a Technical Audience", " Chapter 5 How To Present to a Technical Audience In the last lesson we covered what to consider when presenting to a general audience and walked through an example of an actual general-audience presentation. Here, we’ll approach presenting to a technical audience using a similar approach! 5.0.1 The Audience When presenting to a technical audience, you’re presenting to an audience of your peers. These are individuals who regularly analyze data and/or are familiar with your work and the way you approach data analysis. This could be other members of your team or other individuals at a conference in your specific field of expertise. As a result, you can often limit the amount of information you provide as introductory material in this type of presentation and really focus on the details of your analysis. 5.0.2 The Goal Unlike a general audience presentation where the goal is to teach at a high level what you did, the goal of this type of presentation is to really explain details of what you did. The details and caveats of your approach should be the focus here. 5.0.3 The Presentation For a technical audience presentation, you’re still telling a story, but the organization of your talk and the material you emphasize will be different. It should still be cohesive with a beginning, middle, and end, but you’ll really focus a lot of attention on the middle, where you explain the details of your analysis. 5.0.4 Emphasize While you will certainly still provide your audience with the question you’re asking and important background information, the emphasis of your technical talk will be on the middle portion, where you’ll describe in detail what you did and what your findings are. Thus, you’ll want to provide your audience with: a detailed summary of the data (descriptive + exploratory analysis) what you did (with concrete details) what you found (with multiple figures discussing results) discussion of the analysis conclusion In a presentation to a technical audience, you’ll want to be sure the audience knows exactly what data you’re working with. In a general audience presentation, you will likely inform the audience of how many observations were included in your analysis; however, here, you’ll likely discuss that in addition to presenting some exploratory plots that provide your audience insight into the data included in your dataset. In addition to providing your audience with details about the data you used, you’ll want to provide details about what you did. This includes what software and packages you used (including what versions were used!) as well as details of how you approached and carried out your analysis. Finally, while in a general audience presentation you’ll want to limit the results you present to one or two figures, here it is ok to include more results, as long as they’re important to your story. In addition to presenting detailed results, it’s also appropriate to discuss where you ran into trouble during this analysis, what you thought about the tools you chose to use, and a discussion about the tools themselves. A technical audience will likely consider whether or not your approach will be helpful in their own work, so it’s helpful to include this type of discussion. Finally, you’ll again want to wrap up your presentation with a conclusion slide. In a technical talk, this can include conclusions about both your analytical approach and the results from your analysis. 5.0.5 De-emphasize In a technical talk, it’s ok to de-emphasize discussing background information that is shared by everyone in the room. For example, if you’re meeting with other team members who are all working on a similar project, you can likely just refer to the project you’ll be discussing to get everyone on the same page and can leave out the rest of the background information about the project, since everyone in the room is already familiar with that information. All that said, while it’s still certainly important to provide your audience with some Introduction and Background information, in a presentation to a technical audience, the bulk of your time and focus should be spent discussing the details of the analysis and its results. {format: png} 5.0.6 Technical Presentation Example Like in the last lesson, we’re going to walk through a technical talk. The title of the technical talk we’ll be discussing is “Improving the value of public data with recount2 and phenotype prediction” and the slides are viewable here. Go to these slides now and scroll through them. Note the mathematical notation on slides 70 through 87 – this level of detail was not included for the general audience (slides 96-110 [here for the general audience comparison(bit.ly/general_audience)]. There will again be a quiz question about these slides, so it’s best to open it up and take a peak now. While the title and presentation details differ from the general audience presentation, the outline of the talk remains the same: Introduction Part 1: recount Part 2: phenopredict Part 3: application Conclusion We’ll break down this talk in the same way that we did the general audience talk in the last lesson. {format: png} As a reminder, each slide was assigned one of 7 categories: question, outline, background, approach, results, teaching, or conclusion. Each category was assigned a different color. (The colors are the same as in the previous lesson). All the way to the left represents the first slide in the presentation. All the way to the right represents the last slide. You’ll first note that this presentation (like the general audience presentation) is motivated by a question, helping tie the story together. The presentation again begins with background. {format: png} However, what you’ll notice is that this technical presentation is results and approach heavy. A fair amount of the presentation is dedicated to results. {format: png} Further, unlike the general presentation slides, the approach here includes a greater amount of technical detail. Thus, while the analytical approach is discussed in a general presentation, it’s done at a high level. Here, in a technical presentation, equations and specific details of the analysis are included. To summarize this presentation, we can see that the bulk of the presentation is spent on background, results, and approach. There is not much teaching in this technical presentation. {format: png} 5.0.7 General vs Technical In the last lesson in this course we visualized a general talk and here we’ve done the same for a technical talk. Each presentation was on the same topic. Thus, it would be beneficial to compare the two directly here. Here we see the general presentation visualized at the top and technical beneath it. The focus on teaching and approach in a general talk and the focus on approach and results in a technical talk becomes evident when compared on the same image. {format: png} To summarize this graphically, using the same bar plots, here we have the same categories we’ve looked at previously, but we see the results for each type of presentation. General talk is in green. Technical talk is in orange. When we focus on the results and teaching bars, we can see this general talk did a lot more teaching, while the technical talk focused more time presenting results. {format: png} As discussed previously, both have a similar amount of background and approach; however, the approach slides for a technical talk are much more specific than they were for the general talk. {format: png} Finally, we’ve also broken down the presentation by percent of slides dedicated to each part of the presentation. We can see that there aren’t huge differences between the two types of presentations. In both cases, the bulk of the time was dedicated to discussing part two, as this was the focus of the presentation. Thus, while the way the information was presented and the level of detail differed between the two presentations, the breakdown of the topics discussed in each presentation were pretty similar. {format: png} 5.0.8 Summary In this lesson we discussed the approach to and specifics of presenting to a technical audience. We walked through an example of a presentation used to present to a technical audience and broke down what parts of that example presentation were spent on what aspect of presentation. We highlighted the need to present the details of your analysis and to discuss your thoughts about the analysis and tools used in your presentation. Additionally, we’ve compared the general and technical presentations visually to really drive home the shift in focus from a high-level general audience presentation to a detailed, include the nitty-gritty technical audience presentation. 5.0.9 Slides and Video How To Present to a Technical Audience Slides "],["how-to-write-a-blog-post.html", "Chapter 6 How To Write a Blog Post", " Chapter 6 How To Write a Blog Post Blog posts are pieces of writing that are posted to and shared on the Internet. For data scientists, writing blog posts can help to share ideas, projects, and information with others while reading blog posts can help you learn how others analyze data, figure out what new tools are out there, and obtain new skills and tools that will be helpful to you as a data scientist. Thus, learning where to find data science blogs and how to write a good blog post is an important skill. First and foremost, blogs do not have to be the same quality as a published article or academic paper. They do not have to be as polished as a published and peer-reviewed paper would have to be. Instead, blog posts can be of different levels of sophistication and varying lengths. They can be short and just provide a single, simple example. Or, they can be longer, more in-depth, and more polished. 6.0.1 General Outline While there are a number of different types of blog posts (we’ll get to that in a minute!), there is a general outline that can be followed whenever you’re writing a blog post. As with all forms of effective data science communication, a blog post should tell a story. The best blog posts are interesting, clearly-written, and informative. The beginning of your blog post should include some introduction as to why you’ve decided to write this topic and any necessary background information. This means that the blog post should always explain in the beginning why the reader should care and/or what problem is being tackled in the post before diving into the rest of the blog post. After that, any necessary background information should be included. References/citations to others’ work should be included when applicable throughout the post. After you introduce your topic, the body (or middle) of your blog post should be broken down into sections. Sections of the blog post should be separated using section headers to help organize the post and guide readers along. Generally, shorter sections are better than longer (our attention spans as humans are pretty short after all!). These sections should be ordered in a way that logically tells the story you’re trying to tell. If it’s an analysis you’re writing about, you’d start with a section on the data you used, then talk about your approach, and finally share your results (with good figures!). Finally, there should be a conclusion section. This should concisely explain the take home message or messages that you want readers to get from your post. {format: png} 6.0.2 Types of Blog Posts While there are many different types of blog posts out there, the four most common are: Announcement How-To Analysis Workflow We’ll describe what each of these is in this lesson and walk through an example or two of each type of post, highlighting the important parts of each post. 6.0.2.1 Announcements Announcement posts most importantly provide information about a tool or resource that may be helpful to the community. They can optionally include an example of how to use that tool or examples of why this information is important to the community. However, most importantly, their purpose is to make the community aware of something. For example, Julia Silge contributed an announcement post to the Stack Overflow blog titled: Public Data Release of Stack Overflow’s 2018 Developer Survey. The main goal of this post is right there in the first sentence. The post was written to inform readers that they can now “access the public data release for Stack Overflow’s 2018 Developer Survey.” {format: png} The post goes on to describe what the Stack Overflow 2018 Developer Survey is with hyperlinks to information that may be helpful to readers. Readers could go to that link to read all the details of this important annual survey, which asks more than 100,000 developers about the technologies they use, careers they have, and how they learn; however, that’s not required. This is because in addition to making this announcement Julia also includes what types of questions these data can be used to answer with figures and short explanations of each example right in her blog post. Each example in her blog post is separated by a bold header that asks a question. Julia then provides a figure answering that question with a short bit of text after the figure explaining what readers should take away from the figure. {format: png} Specifically, if we look at the section “Who considers themselves part of the Stack Overflow community?” in the post, we see a clear figure with “years of coding experience” on the x-axis and “% who consider themselves part of the Stack Overflow community” on the y-axis. The lines on the graph are colored by gender, with a key for which line is which gender off to the right. Below the figure is a short paragraph explaining in words how readers could interpret the information on this plot. This blog post is a great example of an announcement blog post as it: Makes the announcement Explains why this information is helpful Includes a few clear examples The post uses clear language and examples and does not go into unnecessary detail, which is perfect for an announcement blog post. Generally, announcement blog posts are helpful for announcing new software, new datasets, and/or new resources. 6.0.2.2 How-To Another very common and helpful type of blog post is a How-To blog post. This type of post is also often referred to as a tutorial. These blog posts explain and teach how to do something and include all the necessary information for others to do the same. How-To blog posts on introductory data science topics, such as data wrangling, can be incredibly helpful to those just getting started in. For example, in an earlier course when we were discussing the dplyr package, we referenced Suzan Baert’s four-part data wrangling series. These posts are an example of wonderful How-To posts. Through explanatory text and helpful examples, this set of posts teaches users new to programming or programmers new to dplyr how to wrangle data in R. How-To blog posts should introduce what it is the post will teach and then provide all the information needed for the reader to learn the topic being covered. In Suzan’s dplyr posts specifically, the title first describes what readers will learn by reading the blog post. {format: png} She also helpfully includes a table of contents for readers, so that skipping to the section of most interest to you is simple! {format: png} Then, for each section, Suzan includes a section title, text to describe what the section will teach, the necessary code, and the results of the code. {format: png} By using this structure, each step is organized into a digestible amount of information. Suzan doesn’t introduce all the topics at once. Instead, she incrementally walks readers through each required step. This is an important part of writing good how-to blog posts! For another example, Hilary Parker wrote a blog post called “Writing an R package from Scratch” on her blog Not So Standard Deviations. While we haven’t discussed writing R packages on your own yet in this Course set, we have worked with many different R packages! Each package has a similar structure. Hilary Parker explains how to write an R package in her very helpful how-to blog post! {format: png} In this post, she includes a very clear title and begins her post with a story about why she’s writing this post. This helps draw the reader in. Then, at the end of the introduction she informs the reader what they will get out of the tutorial. As her blog post continues, she includes links to where readers can find more in-depth information about the topic as well as clearly defined steps so that a reader could make a package of their own.Steps are separated into sections and code is clearly separated from explanatory text. {format: png} In both of these examples, the How-To Post: Introduced the topic/problem being tackled Included text and code Explained all necessary steps for reader to follow along Writing a good How-To post involves identifying a problem that others may run into and writing a helpful post about how to step-by-step solve that problem. 6.0.2.3 Analysis In addition to How-To posts, data scientists often blog about interesting analyses they have done. One that we have already discussed in previous lessons is David Robinson’s “Text analysis of Trump’s tweets confirms he writes only the (angrier) Android half”. In this blog post, David Robinson walked readers through his analysis of Donald Trump’s tweets. He includes the main point of his analysis in his title and then introduces where he got the idea to do this analysis. {format: png} After introducing the question, David Robinson introduces his readers to the dataset he’s used for the analysis, including code for others to also carry out the analysis {format: png} The post then walks readers through all the code necessary to reproduce his analysis, text to explain each step in his analysis, and figures throughout the post to display the results. For example, in the “Comparison of words” section of his post, he shows readers the code used to wrangle the data used in his figure. Then, the displays the figure with text beneath explaining what the figure shows. {format: png} Note that all the figures in this post are clear; however, they’re not always as polished as what you may see in a published article. This is OK! The point is to convey the results of your analysis, not to have the prettiest figures. Thus, time should be spent ensuring that your post is clear and your analysis correct, but it’s not necessary on a blog post to ensure that everything is of publication quality! Of course, you don’t want to share incorrect information. So, it’s best to spend time cleaning your data, ensuring that your analyses are correct, and considering the ethical implications of your work before sharing it online. 6.0.2.4 Workflow Finally, helpful blog posts can also provide readers with a description of the authors’ workflow. These types of posts are helpful to understand how others work on their computers and analyze data. They provide readers with ways to speed up their current data analysis process, introduce readers to new technology, and provide an alternate approach that may be different than your current approach. One popular workflow blog post is from Jenny Bryan titled “Project-oriented workflow”. In this post, Jenny Bryan explains how she sets up her working environment in RStudio using a project-oriented workflow. She begins the post by explaining what prompted her to write this post. She follows up the introduction by defining some important terms (necessary background information!) that will help readers understand the rest of her post. {format: png} Then, Jenny Bryan introduces the here package and using RStudio Projects in your workflow. She includes section headers to organize the post and all necessary code to get started using this workflow {format: png} It’s a brief but helpful post about how to approach data analysis using projects and what the potential downfalls are of opting not to use this type of workflow. 6.0.3 Why Blog? Now that we’ve covered the four most common types of blog posts, why is this an effective form of communication for a data scientist and why dedicate the time to blogging? First and foremost, writing blog posts can help you clarify and organize your thoughts by writing them down in a clear and concise blog post. This can be helpful to you and others who may read your blog post and learn from it. Second, your potential audience is huge. With a blog post, you have the ability to reach anyone with access to the Internet. Helpful blog posts can help get your name out there, which is important in a field where there are lots of jobs but also lots of individuals interested in those jobs! 6.0.4 Blog Etiquette When looking at others’ work, it’s often easier to be critical than supportive. Being openly critical of others’ work online can also seem easy since there’s a computer screen between you and the person/people whose work you are criticizing. Thus, while being critical of others’ work is OK, it is not ok to be mean or rude when doing so. It’s ok to disagree with others online, however, the comments about others’ work should always be limited to the work itself (no personal attacks!) and the tone should be as kind as possible. There’s no need to make enemies, and you’ll look like a jerk if you act like a jerk online. It’s much better to be supportive of others in blog posts than to be rude. People will be more likely to help you when you have questions in the future and to keep up with your work if you approach blogging in a supportive manner. Keep this is in mind whenever you generate content online, be that a blog post or a comment on someone else’s work. 6.0.5 Summary Now that we’ve walked through the main types of blog posts and why you would want to write a blog post, we’ll leave you with a few of the dos and don’ts of writing blog posts: 6.0.5.1 Do have an informative title include hyperlinks and references to others’ work separate sections with headers include good figures use clear, concise language proofread blog about things that are interesting to you! 6.0.5.2 Don’t be a jerk use a click-baity title spend all your time making sure it’s absolutely perfect leave out important details disparage others’ work be afraid to put your work out there! 6.0.6 Additional Resources For access to blog posts written by R users, check out the following two resources: R-bloggers R Weekly 6.0.7 Slides and Video How To Write a Blog Post Slides "],["participating-in-meetings.html", "Chapter 7 Participating in Meetings", " Chapter 7 Participating in Meetings Most data scientists spend a fair amount of their time in meetings, either running them or as a participant. In this lesson we’ll cover when to have a meeting, how to run a meeting, and how to participate in a meeting as a data scientist. 7.0.1 Meeting Etiquette When it comes to meetings, whether you’re running the meeting or in the room as a participant, there are a number of general guidelines when it comes to meeting etiquette. Some of these may be obvious, but we’re including them for completeness. Those who attend many meetings will already be familiar with this topic; however, for those who have not yet attended many meetings, this information is incredibly important. It will help your meetings be more organized and help so others don’t like meetings you host or those at which you present. When it comes to meetings: be on time - show up on time, start the meeting on time, and end the meeting on time be concise - avoid rambling on. People will stop listening to you, and you don’t want that be positive - you can disagree with an aspect of someone’s work while still expressing appreciation on what they’ve done. It’s okay to “What you’ve done here is great and a lot of work. I have one suggestion though…” don’t talk over others - We all get excited about an idea from time to time, but that’s no excuse to talk over others. If someone else is speaking, you shouldn’t be don’t interrupt - Let others finish their ideas. Even if you know the rest of the sentence you’re going to say, everyone else in the room may not and it’s just rude to interrupt others. Let the person speaking finish their thought. avoid being hyper-critical - Simply, being hypercritical is not a good look. It makes others not want to work with you and makes you look generally like a jerk. Find a way to make your thoughts clear without being unnecessarily critical if you point out a problem, try to think of and offer a solution - Providing your thoughts and feedback within a meeting may be incredibly important; however, if you’re identifying problems, it’s best to also offer possible solutions or suggestions While some of these may seem obvious, it can be hard to be a good citizen within a meeting. If you’re less experienced, speaking up may be intimidating so you may be more likely to ramble on when called upon. If you’re more experienced, you may be quick to notice errors others have made because of your experience. In each case, it’s important to remember these guidelines so that meetings do not become things that neither you nor your team members want to attend. {format: png} 7.0.2 How to Host A Meeting Sometimes you’ll just be a participant in a meeting while other times you may be the one running the meeting. If you find yourself in charge of hosting and running the meeting, there are a number of considerations to take into account while planning the meeting, during the meeting, and after the meeting. A lot of this has been discussed elsewhere previously and we’ll use this twitter thread to guide this lesson, but it’s important information to cover here as well. 7.0.2.1 Before the Meeting Before the actual meeting it’s important to: Decide If you Need to Have a Meeting Write &amp; Distribute an Agenda Decide When &amp; Where to Have the Meeting Determine Who Should Be There 7.0.2.1.1 Decide If You Need to Have a Meeting When you first decide to have a meeting, the first thing you want to be sure is that there actually has to be a meeting. Meetings are necessary for sharing and discussing ideas among participants or for interactive presentations. If the purpose of the meeting is simply to share information, this should be an email and not a meeting. 7.0.2.1.2 Write &amp; Distribute an Agenda Once you’ve determined that a meeting is truly necessary, you should draft an agenda. This agenda should have times on it for each part of the meeting to keep everyone on time during the actual meeting. When deciding on an order for the meeting, the most pressing and important issues should be covered first. Prioritize those items that will have the largest impact, but take the least amount of work/time to accomplish. Additionally and importantly, this agenda should be distributed to all meeting participants before the meeting 7.0.2.1.3 Decide When &amp; Where to Have the Meeting With a plan in hand for the meeting, it’s up to the host to find the date &amp; time that will work best for the people who have to be in the room and to ensure that the room/space where the meeting will be held is available and has been reserved. 7.0.2.1.4 Determine Who Should Be There When planning and hosting a meeting, ensure that everyone who should be there is invited with enough notice. Similarly, be sure that people who do not need to be at the meeting are not brought to the meeting. There’s no reason to waste others’ time with a meeting full of information that does not pertain to them. 7.0.2.1.5 Send out The Meeting Information There are may different ways (email, apps, etc.) in which people invite others to meetings, so it’s best to use whatever system is customary at your job. Regardless of how you send out the information about the meeting, be sure to send out the date, time, and location for the meeting to all participants. This should be done as early as possible, as peoples schedules fill up. Then, a day or two before the meeting, send out a reminder to all who will be there. 7.0.2.2 During the Meeting Once the time, date, and location are set, participants have been made aware, and an agenda has been sent out, you’re close to ready for the actual meeting. 7.0.2.2.1 Ensure Someone is In Charge First, someone should be running the meeting. This does not mean that this person has to speak the most. In fact, it’s best if this person is not the person leading most of the discussion, as the person engaged in a lot of discussion is less likely to keep everyone on task and on time. Alternatively, the person running the meeting should make sure that the schedule is adhered to and that everyone stays on topic. If discussions begin to veer off topic, it’s the person who’s in charge’s responsibility to cut it off before everyone’s time is wasted. The person running the meeting can always encourage those involved in the tangential discussion to chat outside of the meeting. Additionally, if you’re concerned about stopping the conversation and not wanting to be rude to those in the off-topic conversation, just consider the time of the others in the meeting whose time is being wasted by off-topic discussions. By cutting these types of discussions short, you’re doing everyone else in the room a favor and doing your job as the person in charge of keeping the meeting running smoothly. 7.0.2.2.2 Keep Minutes Someone should be responsible of keeping notes during the meeting. All important information, decisions that were made, and tasks that were assigned should be recorded. 7.0.2.2.3 Meeting Expectations Additionally, at the beginning of the meeting, expectations should be clearly set. If this is a meeting where information will be presented with time for questions at the end, ensure that the audience knows that. If it’s a meeting involving a lot of brainstorming, make sure that is stated explicitly. Additionally, be sure that if many people are given the chance to contribute, that everyone with ideas is getting to contribute. It’s the person in charge of the meeting’s responsibility to ensure that a few loud voices are not dominating the conversation when others have ideas to contribute. 7.0.2.2.4 End Early If the agenda is adhered to and individuals stay on-topic, this should be no problem. If a meeting is to end at 2PM, be sure that it ends at 1:55PM at the latest. This will allow everyone at this meeting to get to their 2PM appointments. If the agenda is not adhered to and topics still aren’t covered by the time 1:55PM rolls around for your meeting that was scheduled to end at 2PM, too bad. The meeting still must end by 1:55PM. It is not ok to take up others’ time due to the meeting agenda being poorly-executed or managed. Always end early. 7.0.2.3 After the Meeting Right after the meeting, be sure to send a meeting summary including all the information in the minutes to all meeting participants as well as those who weren’t able to make the meeting but would have participated had they been free. These meeting minutes can also be referenced in the future to hold people accountable. If someone promises to do something by the next meeting, that will be recorded in the minutes and can easily be followed-up on at the next meeting. 7.0.3 How to Participate in a Meeting If you’re not in charge of running the meeting but are rather a participant in a meeting run by someone else, you have a number of responsibilities as a meeting contributor. If you’re presenting at the meeting, you have additional responsibilities. 7.0.3.1 Your Responsibilities When you’re in a meeting, it’s your responsibility to pay attention to what’s going on. This may mean putting your laptop and cell phone away. Often, it requires at least jotting down notes. As you jot down notes, it’s good practice to write down questions you have. When it’s your turn to speak, you can use what you’ve written down to ask a great question without rambling on. Additionally, as a meeting participant, it is your responsibility to limit the length of your commentary. Avoid rambling on without saying anything important. 7.0.3.2 When Presenting In addition to these responsibilities as a meeting participant, if you are presenting at the meeting, you have additional responsibilities. 7.0.3.2.1 Be Mindful of Time First and foremost, be sure to check on the agenda to see how long your topic has for presentation and discussion. As discussed in the presentation lesson earlier in this course, always stay within your allotted time. Any time that you go over what you’ve been allotted takes away from someone else’s presentation time, and that’s not fair. 7.0.3.2.2 Be Prepared When presenting at a meeting, you should always be prepared with a high level overview of what you’re presenting. This is often referred to as an executive summary. As discussed in the brief reports lesson earlier in this course, this will include only the necessary and minimal details about your work. While you’ll often only present the high level and general summary, you should still know the details of the work to answer questions from others in the room. Additionally, if you’re presenting high-level slides, it’s a good idea to have “just in case” slides at the ready. These are slides that you don’t intend to present but could be used if someone were to ask a particularly detailed question about your project. 7.0.3.2.3 Guide The Discussion This can be tricky, but if someone starts down a path that is tangential or unrelated to the work you’re presenting, it’s ok to cut that line of discussion off. It’s often best to say something like “That’s an interesting idea, but I’m not sure we have time to discuss that now. You and I should talk after the meeting about that.” It can be difficult to do this, especially if the people asking the unrelated or off-topic questions are your bosses, but it’s best for the meeting to do so, so just keep that in mind! 7.0.4 Summary In this lesson we’ve covered the basics of participating in and running meetings. At their core, meetings take up time, thus it’s best to ensure that this is time well spent. To do this, be organized, start on time, keep to the agenda, stay on task, and end on time. If you do this, your meetings will be productive and run smoothly! 7.0.5 Additional Resources Twitter Thread on Meetings, by Greg Wilson How to Run a Meting, by Antony Jay 7.0.6 Slides and Video Participating in Meetings Slides "],["how-to-have-a-one-on-one-meeting.html", "Chapter 8 How To Have a One-on-One Meeting", " Chapter 8 How To Have a One-on-One Meeting While meetings often involve a number of individuals, one-on-one meetings are also common to data scientists. The goal of larger meetings are often to share updates on projects, to brainstorm ideas, or to present recent findings from data analyses. However, for one-on-one meetings, the goal is often to consult. In these cases, individuals with less data science experience will often bring you (the data scientist) a dataset they don’t fully understand. It’s your job to figure out what to do. It’s these types of one-on-one meetings that we’ll discuss in this lesson. We’ll discuss how to navigate these conversations, how to guide the meeting, and what to do after the meeting. 8.0.1 Consulting One-on-one meetings where a project or dataset are being discussed between two people – one interested in answering the question and one the individual with the data science experience – are often referred to as consulting. If, in your job, you’re expected to consult with others at the company regarding their data problems, it’s important to know how to navigate these discussions. Often, these meetings will be scheduled by email (or some other direct messaging system, such as Slack). Meetings of this nature can take just a few minutes (10-30 minutes) if the question requires very little; however, more often than not, these types of meetings take at least an hour to really hone the question that can be answered given the data at hand and to devise a plan to answer the question of interest. That said, in the time between when the meeting is scheduled and the meeting is to take place, it’s ok to try to get some information to best prepare for the meeting to come. Depending upon what the individual seeking your help is looking for, this may be a time to request access to the data you’ll be discussing so that you can familiarize yourself with the dataset or for background information for you to read beforehand. Having this information beforehand can be helpful but is not necessary. It’s not uncommon for the individual you’ll be meeting with to just want to chat at that first meeting, and that’s ok! 8.0.2 What to Expect Once the day of the meeting, all the etiquette rules discussed in the last lesson still apply: be on time, be considerate, don’t interrupt, etc. These rules are often easier to follow when there are just two people having a discussion in a room, but they’re incredibly important. Be sure that you’re respectful of each other in these meetings. Be aware that there may be concepts that are familiar to you and unfamiliar to them. And, know that the opposite is true: things familiar to them may be unfamiliar to you. This is what makes meetings great – you can both learn from one another. However, for this to be true, you must respect the other person and never put someone down for what they don’t know. 8.0.2.1 The Investigation Once the meeting begins, the start to the talk is a lot like an investigation. This initial discussion involves the person seeking consultation explaining the problem they have, the data to which they have access, and the question or questions they want to answer. Your job at this point is to: figure out what kind of question they want to ask determine what they already know about this question identify what data they have in hand figure out what data they think they’ll have in the future determine if they can answer the question they want identify any constraints on the data 8.0.2.1.1 The Question Often, people will come to you with a vague question of interest. It’s your job to help form a data science question using the skills learned in Data Analysis course. Ensuring that this question can be answered and is specific enough should be your goal. By having a discussion in this meeting and explaining why the question must be specific will help you both reach this goal. 8.0.2.1.2 Prior Knowledge It’s important to understand what the larger community already knows about this topic and what the individual you’re meeting with has already learned from the work they’ve done. This is where you should do a lot of listening and learning. Eventually, the person you’re meeting with should learn some analytical skills from you, but at this point you’re learning from the person with whom you’re meeting 8.0.2.1.3 The Data Often, people meet with you after they’ve already collected data. Ideally, it’s best to meet before data are collected to ensure that the best possible data (with the right variables and for the necessary number of people) are collected; however, in reality, that’s not always the case. Often, you’ll be contacted after data has been collected. In these cases it’s important to identify what data the individual has already. For datasets that are not tidy, it’s best to discuss the principles of tidy data and to determine what their data would look like if it were in a tidy format. You can decide whether or not you’ll do the tidying with the data they have or whether they’ll tidy the data; however, moving forward, regardless of who does it, you’ll need to work with a tidied dataset. Also, by discussing what form the data should be in for easy analysis, you can determine how to best collect data going forward. Often, the individual will have a plan to collect more data or will be aware of other datasets that they’ll be receiving soon. In this meeting, it can be helpful to discuss how to format the data they’ll be collecting in the future. Additionally, by discussing what data they’re expecting to receive, you’ll be able to devise a better plan for analysis. 8.0.2.1.4 The Analysis After discussing the type of data and the question of interest, this is where you, as the data scientist, will determine what type of analysis is most appropriate. Given the information at your disposal, you’ll determine what approach you’ll take to answer the question of interest. You’ll have to determine what variables will be used to answer the question of interest, how you’ll deal with missing data, what your plan is for outliers, and determine whether there possible confounders in the analysis? This is where you’ll be doing the teaching and the person you’re meeting with will get to learn. Be sure that everything you say is clear to the other person in the room. Always give them the chance to ask questions. They may be much less familiar with the topics you’re discussing, and it’s your responsibility to ensure that you’re clearly explaining everything. That said, it’s their responsibility to ask questions if anything is unclear. Together, with the best understanding possible on both sides, the project will be able to move forward. 8.0.2.1.5 Limitations It’s always important to consider what limitations there are to your analysis. To do this, again consider what the perfect dataset would look like to answer this question. Then, think about how the data you have differs from this optimal dataset. Those differences are the limitations to your data. A similar mental exercise can be done for the analysis. If you’d like to establish a causal relationship between two variables but only have observational data, you may like to have a randomized trial dataset. But, you don’t. This is a limitation. Thus, you’d report that you are only reporting an association and are not assigning causality. It’s important to determine before the analysis what your interpretation of the results would be however they turn out after the analysis. This will help you avoid over-interpreting your findings after the fact or trying to conclude something beyond what the results of your analysis suggest. All projects have limitations. And, that’s ok! However, they must all be discussed and reported. 8.0.2.2 The Checklist To ensure that you’ve not missed anything in this meeting, using this checklist to guide your meeting may be helpful. By familiarizing yourself with the questions here and reviewing it in your meeting, you’ll be more likely to have a productive consulting meeting. Have you…: Determined a specific question? Discussed what information is required to answer question? Decided what variables you’ll use in the analysis? Discussed what data are currently available? Determined if available data in a tidy format? Discussed data that will be available in future? Discussed limitations to the dataset? Determined approach that will be used to answer question? Discussed why this approach is the best approach? Discussed limitations to this analysis? Asked if there are any questions? Asked if anything is unclear? {format: png} 8.0.2.3 Assign Responsibility Once the question has been honed, available data have been discussed, and an analysis plan has been decided, it’s time to decide who will be doing the analysis. This often depends on how the company is structured. Sometimes, it’s your responsibility to do the analysis. Other times, they will do the analysis and discuss results with you at a future meeting. It’s important at this point to determine who is responsible for doing what and to set up a future meeting if necessary. It’s also best to verbally summarize the meeting. By discussing the question of interest, the data, and the analysis, you’ll both be on the same page. It’s also best to write notes down at this point. Every data scientist has thought they’ll remember something only to look back in the future and not be able to remember some important detail. Keeping these notes in a lab notebook is a great idea. We’ll discuss exactly how to do that in a future lesson in this course. 8.0.3 Follow-up Meetings After the first meeting, you’ll each carry out what you agreed to in the first meeting. Then in follow-up meetings, you’ll: report on what you’ve done discuss limitations determine their understanding ask questions answer questions In this meeting, you’ll each report on what you’ve done. It’s your job to explain what you did and explain why you did what you did. You’ll want to explain how you did the analysis and what your interpretation of the results are. You should also discuss any limitations of the analysis at this point. Did you not have the data you needed? Was the sample size not big enough? All of this should be discussed. After discussing the results and limitations, it’s best to determine how well you each understand the project. It’s possible there’s some piece of background information you’ve not understood perfectly or some part of the analysis they don’t understand. It’s best to determine whether or not you both understand what’s necessary for understanding of the project and the analysis. Finally, there should always be a portion of this discussion where you both get to ask and answer questions. You may need to further clarify or explain the analysis. They may need to further clarify what they were looking for. This is all fair game and should be discussed in this meeting! The second meeting may be the last; however, projects often involve more than two meetings. In between each meeting, emails or Slack discussions can help move the project forward. Eventually, once all required analyses have been completed and the question has been answered, these meeting may not be necessary any longer; however, it is ok to need to meet multiple times on a single project. 8.0.4 Common Pitfalls Working with others is one of the best parts of being a data scientist. You get to learn from and teach others regularly as part of the job! However, any time individuals with different educational backgrounds, different skill sets, and different personalities work together, there is a chance that things won’t go perfectly. Here, we’ll discuss some of the common pitfalls of one-on-one meetings and offer approaches to avoiding these potential obstacles. 8.0.4.1 The Initial Meeting At the initial meeting, the person you’re meeting with: may miscommunicate could struggle to be specific enough won’t know what they want This miscommunication may be unintentional (they don’t understand the data they have yet) or intentional (they are afraid or don’t want to be honest with you about the data). In these cases, when you go to analyze the data, you may realize that a miscommunication has happened. In these cases, it’s best to go back to your collaborator and discuss your reservations and what miscommunication has happened to correct the record and more forward. If their miscommunication was meant to deceive and they still won’t be honest with you, it’s best to consider whether or not you should continue to work on this project. Here, discussions with your boss or human resources may be necessary. Always try to discuss and work with your collaborator first; however, if people are acting unethically and dishonestly, it is not your responsibility to continue to work on the project. If your collaborator is struggling to be specific enough, it’s often because they haven’t thought fully enough about their project yet. In these cases, it’s best to explain why being specific in asking their question is important using what you learned in the Data Analysis course earlier in this course set. Additionally, by looking at the data they have available and doing some exploratory analyses and discussing the results, you may be able to help them toward being specific enough going forward. Finally, if the person you’re meeting with doesn’t know exactly what they want, that’s ok! Be prepared to have ideas and suggestions to try to get them on the right track. Providing solutions in this case is the best way to get everyone back on track! 8.0.4.2 Follow-up meetings At follow-up meetings, there are further common pitfalls to be aware of. At these meetings: the data may not show the desired results information could be missing your collaborator may not understand or may misinterpret the findings Projects often go differently than planned. The results may not show what you were hoping for. Projects go in different directions than what was initially intended. All of this is more than okay. As a data scientist, your job is to answer interesting questions using data. If the data show something different than what you were expecting, check to make sure that your analysis was correct. If it was, then the results are what results are. It is never ok to change your analysis because you or your collaborator don’t like the results. If a collaborator ever tries to convince you to do something unethical or to obtain results that they want to see rather than accept the results for what they are, it is your responsibility to push back. Stick to your code of ethics and always explain why you are unwilling to do so to best explain where you’re coming from. If you have not received the data you were anticipating or if necessary information you thought were in the dataset are not, this could cause issues at follow-up meetings. In this case, explain the limitations to the analysis should the data or information not be provided. If your collaborator now states that those data will not become available, consider re-working the question or approaching the analysis differently given this new information. Finally, given differences in backgrounds, a collaborator may misinterpret or not understand the results of your analysis. In the meeting, it’s always best to ensure that you’re on the same page. But, what if you think you’ve done that and then see in an email from your collaborator to your collaborator’s boss reports of information that is not what your analysis concluded. In these cases, it’s best to follow-up directly with your collaborator, explaining (kindly) where they’ve gone wrong. Often your collaborator will realize their misinterpretation and correct their mistake in a follow-up email to everyone. If they refuse to correct the record; however, it’s then your responsibility to do so. This won’t always be comfortable, but it’s most important that your analysis not be misinterpreted. Generally, it’s best to give your collaborator the benefit of the doubt first and to discuss misunderstandings with them directly first. If they are resistant, however, it’s your responsibility to make sure that your analysis is not being used incorrectly. 8.0.5 Data Science Ethics We’ve discussed ethics in previous courses and briefly above in this lesson, but we want to be explicitly clear: as a data scientist it’s the process is what matters not the result. Your job is to do data science, not to produce results that make your bosses happy. If the analysis makes your boss happy, awesome! But, you should never be pressured to change an analysis just to please a co-worker. This can be a challenge, especially if pressure is being applied to you. In these cases remember, ethics is more important than results. Don’t succumb to the pressure - it’s ok to push back, even if it feels like something difficult to do. 8.0.6 Summary In this lesson we’ve discussed the basics of one-on-one meetings, how to approach the meetings, what to cover in the meeting, and what your responsibilities are as a data scientist in one of these consultation-type meetings. Additionally, we’ve covered a number of common pitfalls that can happen in these types of meetings, and how to handle it should one of these pitfalls happen to you. Finally, we discussed the need to always be true to your ethical code and never change your analysis or results simply because someone wants a different outcome. 8.0.7 Slides and Video How To Have a One-on-One Meeting Slides "],["how-to-keep-a-data-science-lab-notebook.html", "Chapter 9 How To Keep a Data Science Lab Notebook", " Chapter 9 How To Keep a Data Science Lab Notebook Lab notebooks are used by every experimental scientist - these are the people who work in a laboratory, carry out experiments, and often wear lab coats and safety goggles. Lab notebooks are used daily to track the details of how each experiment was carried out and the results of the experiment. The goal of lab notebooks for experimentalists is to track the details of what they’ve done in the lab so that they or anyone else else could repeat what had been done previously, given only what has been included in that scientists’ laboratory notebook. As such, they are not polished reports that only include what conditions were eventually used and a clean version of the reports. Rather, they include both successful and failed experiments, messy tables of results, successful projects, failed projects, and information that never ends up getting published. The laboratory notebook is a complete history of an experimentalists’ work. A data science lab notebook is very similar. It should have notes and results form every project you’ve worked on, not just the ones that led to the most interesting results. It should include notes about what you tried, what worked and what didn’t work, issues you’ve run into, and solutions to those issues. It should include a daily account of what you’ve done, what you’ve learned, and what you found. It should be electronic (you will be doing almost all of your work on the computer anyway!) and it should be saved in the cloud. In this lesson we’ll discuss why you should keep a lab notebook, what you should put in your lab notebook, and when it should be updated. Additionally, we’ll walk through one commonly-used electronic lab notebook so that you can get started on using one for your projects. 9.0.1 Why Keep a Lab Notebook You’ve already got email, a Google account, notes you’ve jotted down on random post-it notes, and discussions happening on Slack – why add something else on top of what you’ve already got? Well, first of all, a lab notebook helps pull all the sources of information into one single location. Your data science lab notebook will contain information discussed in email, projects whose results you’ve posted to Slack, and conclusions that you include in presentations you’ve saved in Google Slides. However, it will all be saved in one single place: your lab notebook. In addition to pulling all the different sources of information into a single location, keeping a lab notebook is important because the human memory is fallible. There will be a situation where you assume you’re going to remember a discussion you had or something your boss asked you do to; however, when you return to it, you’ll forget the details of the conversation. By keeping this type of information in your lab notebook, you will not have to go back to the other person and explain that you forgot what they said. Rather, you’ll be able to reference what’s in your lab notebook and move on with your life. Your data science lab notebook will be your memory. Finally, lab notebooks take some effort up front, but that effort pays off by making pulling reports and presentations together much easier. While you’ll be including a great deal of information in your lab notebook for each project, when you go to present this information or write a report, it will all be in one place and you’ll be able to pull that report or presentation together much more quickly than you would be able to otherwise if all the results were in a different place. In summary, keeping a lab notebook is helpful because (1) it keeps you organized by putting all your projects’ information in a single location, (2) helps you out when you need to find information you knew previously, and (3) it minimizes the effort on your end when it comes time to report on a project. 9.0.2 What to Put in Your Lab Notebook Now that we have an understanding of why you want to keep a data science lab notebook, what exactly should you put in that notebook? First of all, like GitHub, your data science lab notebook should be organized by projects. Within each project, you’ll want to record, for each day that you’ve worked on that project exactly what it is you did for that project each day. Thus, each record within a project should include: The Date What you Did what technology you used why you used the approach you used Results any problems you had any solutions you came up with Links to Outside Resources GitHub repository Google Drive link with more results Google Doc with further details etc. Future Plans By including this information, when you look back in the future, you’ll have the full picture of what you did for that project on the day. Additionally, because this will all be stored electronically, this information will be searchable. So, if in the future you run into a problem and remember having run into a similar problem previously, you can search electronically to remind yourself how you solved the problem the last time you encountered it – this will save you so much time. Be sure to always include problems you ran into and solutions you figured out to those problems. It will be worth the time and effort down the line. 9.0.3 When To Update Your electronic lab notebook should be updated daily. In fact, after you finish working on a project for the day, it’s good to get in the habit of completing your lab notebook entry before moving onto the next project you’ll be working on that day. In fact, it’s OK to update your lab notebook for a project more than once a day. That said, it’s not ok to update everything at the end of the week or once a month. This is because you won’t remember the details of what you did or the problems you ran into and solutions you came up with at this point in time. The sooner you update your lab notebook the more accurate your notebook will be and the more helpful that document will be in the future. 9.0.4 Benchling: Data Science Lab Notebook Now that we’ve discussed what a data science lab notebook is and what information should be included in that lab notebook, let’s walk through an actual example using an electronic lab notebook. Benchling is one of many electronic lab notebooks. Benchling, like most electronic lab notebooks, have been designed with experimentalists (biologists, chemists, etc.) in mind. Thus, there will be features of Benchling that are helpful to those groups that we will not use or discuss. However, the ability to keep notes about projects on a daily basis is certainly a capability within Benchling. Thus, we’ll use it here for this example. Feel free to look around on Google for other electronic lab notebooks; however, it’s best to pick one and stick to it. This way, your notes will all be in one place rather than across multiple platforms over time. {format: png} 9.0.4.1 Sign Up To get started with your own data science lab notebook, you’ll first need an account with Benchling. To do so, navigate to https://benchling.com/ and click on “Sign Up” in the upper right-hand corner of the screen. {format: png} You’ll be brought to a new screen. It’s easiest to simply click “SIGN IN WITH GOOGLE.” {format: png} On the next screen, enter your Google email address and click “Next”. {format: png} Then, enter your password for that account. Again, click “Next”. {format: png} Then, fill out the information for the username you’ll use on Benchling. Again, it’s best for your username to be consistent across platforms. However, if that username is taken, you can use a different (but still professional and appropriate!) username. {format: png} Once all the information has been completed, click “Create Account”. Benchling will then ask that you set up your profile. It’s required to include a Company Name and a Phone number at this point in time. Team and Role are optional, so include those at this time if you want. Once this form has been completed, click Next. {format: png} Congrats! You know have a Benchling account! You’ll be brought to a screen where Benchling will ask whether or not you’re here to “Take Notes” or to “Start Cloning.” Since we’re here to take notes and do data science and are not here to do molecular biology, click “Take Notes.” {format: png} 9.0.4.2 Create A Project You’ll now set up your first project. In the last course you were working on the Final Project for this Course Set. In the next course, you’ll be adding this project to your portfolio on your website. To do so, you’ll want to record changes and updates you make to this project on Benchling. So, let’s create a project called “DataTrail: Final Project” now. Type that in the Project Title box now and click “Create Project” {format: png} 9.0.4.3 Create An Entry You’ll now be introduced to entries. You’ll create entries within projects. This will be where you includes notes and results each day. Read the information on this screen, note that some of it will not apply to you because it’s geared toward biologists, and then click “Next.” {format: png} You’ll then be prompted to create your first entry. We’ll call this entry “data analysis.” We’ll include any details about edits or results from the analysis in this entry. Type “data analysis” in the “Entry Title” box and then click “Start writing”. {format: png} You’ve now got your data science lab notebook set up and ready to go. There will be circles on your screen to help you orient yourself to the Benchling platform. Click on these to learn more about what you’re looking at. Once you click on them and click “Got It” in the box that appears, these circles will disappear. {format: png} What you’re looking at here is the screen you’ll become very familiar with as you get used wot working within an electronic lab notebook. We’ll walk through a few important pieces for our purposes now! Within each entry, you’ll add information. All notes you add a project should be entered under the date on which the analysis or step was completed. {format: png} To add a new date within an entry, click on “Insert” and select “New day” from the drop down menu. {format: png} A new date will be added to your entry. {format: png} Benchling will make its best guess as to which date you wanted to be entered; however, if this date is not correct, simply click on the date and change the date to the appropriate date from the calendar that appears. {format: png} Note that Benchling forces entries to be in chronological order. This makes good sense in a lab notebook since previous work has to happen before work today or future work. In addition to text, entries can include hyperlinks, code, and images. To include a hyperlink, highlight the text you’d like to be the hyperlink {format: png} Then, click on the hyperlink icon along the menu at the top, and then enter the URL you want to link to in the URL box that appears. Click “Save.” {format: png} The hyperlink will appear in the text. Code and Attachments (images, etc.) can be added from the “Insert” drop-down menu. For example, to include code, you would click on “Insert” and then select “Code”. {format: png} A code box will appear in your entry. Code can be typed or pasted in this box. {format: png} 9.0.4.4 Create A New Entry If you want to create a different entry within the same project, you would click on the plus sign “Create…” icon in the Projects menu bar at the left. Select “Entry” from the drop down menu. {format: png} A new Untitled Entry will open up. You’ll see a new tab along the top. You’ll edit the title of this entry and Include notes as previously. {format: png} 9.0.4.5 Create A New Project You now know how to create and edit entries within a project; however, you’ll almost certainly be working on multiple projects. You’ll want to be able to keep these projects separate and organized. Thus, notes and results from another project should be stored within entries in a separate project. To create a new Project, you’ll first want to click on “Projects” at the top left of the Projects panel. This will take you from the entries within the current project you’re working on to display the projects you have on Benchling. {format: png} Now if you click on the plus sign, you will create a new project. A box will appear. You would fill out this information to create a new project within your Benchling account. {format: png} 9.0.4.6 Calendar View Now that we’ve discussed projects and entries, there’s an additional nice feature of Benchling. There is a calendar view within Benchling with will let you know what entries and what projects you’ve worked on on what days.To access it you would click on the benchling icon at the top left-hand of the screen. {format: png} Then, click on today’s date. {format: png} A calendar view will appear. Each project will be in a different color and each entry will appear on the days of the calendar on which that entry was worked on. This is a helpful way to determine what you were working on and when. {format: png} While Benchling has a number of other features, these will get you started. Be sure to add entries within projects and update them on each and every day on which you work on that project. It is sure to help you down the line! 9.0.4.7 Summary In this lesson we discussed why lab notebooks are important, what information should be included in them, and when to update them. We also introduced you to Benchling, a free, online electronic lab notebook that you can use to keep track of every aspect of your data science projects. 9.0.5 Slides and Video How To Keep a Data Science Lab Notebook Slides {quiz, id: quiz_08_notebook} 9.0.6 How To Keep a Data Science Lab Notebook quiz {choose-answers: 4} ? How often should you update your electronic lab notebook? daily at least every day Each project should have updates for each day you worked on that project weekly every minute annually quarterly when you think of it right before you have to present your work {choose-answers: 4} ? Which of these is NOT a reason to keep a data science lab notebook? it won’t take you any extra time to use one it forces you to only take the level of notes included in a brief report it allows you to not use GitHub the human memory is not perfect having one helps when it comes time to generate a report having one helps when it comes time to make a presentation it keeps information for all projects in a single place it is searchable for when you run into a problem you’ve seen previously {choose-answers: 4} ? Which of these is NOT a capability of Benchling? using git for version control running R code retrieving information from an API web scraping Note-taking Including plots in entries including code in entries including hyperlinks in entries changing date on an entry deleting a post organizing by project including multiple entries within a project {/quiz} "],["which-graph-to-use-when.html", "Chapter 10 Which Graph to Use When", " Chapter 10 Which Graph to Use When When communicating your data science work, it’s always good to be concise and clear in your writing or speech. However, it’s also important to be sure the figures you use to tell your story are also clear and appropriate. You always want to be sure you’re displaying your data with the right type of graph. We’ve discussed this previously in an earlier course, but we’ll review it in the context of effective communication now in this lesson as well. We’ll discuss when you should presented exploratory graphs and when it’s more important to take the time to generate a really strong explanatory figure. Additionally, we’ll review how best to display different types of data and what types of graphs are most appropriate with regards to the data being displayed. 10.0.1 Exploratory vs. Explanatory At this point, we’ve discussed the similarities and differences between data science reports, presentations, blog posts, and meetings. In every case, it’s your job as the person presenting the information to tell a story. However, the way in which the story is delivered and the level of detail at which information is presented differs depending upon the type of communication and the intended audience. As a result, there are times when presenting exploratory figures is just fine. Exploratory figures can be presented when you’re presenting an update on a project in a somewhat informal setting. For example, in reports that are intended to update your team on new results or in meetings where you’re presenting a brief update, it’s ok to present figures that are not yet perfect. Maybe the axes labels aren’t quite as clear as they would be in an explanatory figure or the line thickness on your plot isn’t as thick as it would be in your final figure. In these cases, that’s ok. If you’re presenting a quick update on a project, it may not be necessary to spend the time required to generate an explanatory figure. However, in other cases, such as when you’re writing a report that will be presented to your boss, pulling together a presentation for a conference, or preparing for an important meeting within your company, you’ll want to be sure to dedicate the time to make your figures as clear as possible. Explanatory figures should be generated for formal updates and presentations. In these cases, take the time to carefully choose colors for your figures, ensure that all text are large enough to be visible to your audience (be that in a report or when projected), and think carefully about what figure titles would be most informative. Note that the size of the text for figures in your report may not be the same size you would need in a presentation. There may be different versions of your figures for different types of communications. Blog posts are interesting in that they fall in between these two cases. The figures don’t have to be perfect – it’s a blog post after all and not a peer-reviewed publication; however, your audience is potentially very large. You want to be sure that your figures are accurate and clear and will not confuse readers or lead them to incorrect conclusions. This said, regardless of how much time you spend on your figures, the data displayed must always be accurate and should never intentionally mislead you readers. 10.0.2 Which Graph To be sure that your figures are not intentionally misleading, the guidelines we discussed in the Data Visualization course should be followed. For example, start your y-axis at zero as to not make differences between groups appear larger than they actually are and choose the appropriate graph given the data you have. We’ll review exactly what types of graphs are appropriate for what types of data using this table: {format: png} In this table you can see a number of the most common types of graphs used to display data. These are by no means the only types of plots, but these are the plots you’ll see and generate most frequently. We’ve broken the plots down by the number of variables they display (one or two) and the type of variable they can be used to display (continuous or categorical). We also include what the goal of each plot type is, meaning what the visualization will show, the name of the plot type, a small example plot, and the geom you would specify within ggplot2 to generate this type of figure. It’s important to be sure that when generating figures for reports and presentations, you’re using the appropriate type of graph for your purposes. 10.0.3 Summary In this lesson, we’ve reviewed when it’s ok to communicate with exploratory figures and when to spend the time to generate an explanatory figure. Additionally, we’ve reviewed what types of plots should be used under which circumstances. It’s important to keep all of this in mind as you generate figures for all forms of data science communication. 10.0.4 Slides and Video Which Graph to Use When Slides "],["about-the-authors.html", "About the Authors", " About the Authors These credits are based on our course contributors table guidelines.     Credits Names Pedagogy Lead Content Instructor(s) FirstName LastName Lecturer(s) (include chapter name/link in parentheses if only for specific chapters) - make new line if more than one chapter involved Delivered the course in some way - video or audio Content Author(s) (include chapter name/link in parentheses if only for specific chapters) - make new line if more than one chapter involved If any other authors besides lead instructor Content Contributor(s) (include section name/link in parentheses) - make new line if more than one section involved Wrote less than a chapter Content Editor(s)/Reviewer(s) Checked your content Content Director(s) Helped guide the content direction Content Consultants (include chapter name/link in parentheses or word “General”) - make new line if more than one chapter involved Gave high level advice on content Acknowledgments Gave small assistance to content but not to the level of consulting Production Content Publisher(s) Helped with publishing platform Content Publishing Reviewer(s) Reviewed overall content and aesthetics on publishing platform Technical Course Publishing Engineer(s) Helped with the code for the technical aspects related to the specific course generation Template Publishing Engineers Candace Savonen, Carrie Wright Publishing Maintenance Engineer Candace Savonen Technical Publishing Stylists Carrie Wright, Candace Savonen Package Developers (ottrpal) John Muschelli, Candace Savonen, Carrie Wright Art and Design Illustrator(s) Created graphics for the course Figure Artist(s) Created figures/plots for course Videographer(s) Filmed videos Videography Editor(s) Edited film Audiographer(s) Recorded audio Audiography Editor(s) Edited audio recordings Funding Funder(s) Institution/individual who funded course including grant number Funding Staff Staff members who help with funding   ## ─ Session info ─────────────────────────────────────────────────────────────── ## setting value ## version R version 4.0.2 (2020-06-22) ## os Ubuntu 20.04.3 LTS ## system x86_64, linux-gnu ## ui X11 ## language (EN) ## collate en_US.UTF-8 ## ctype en_US.UTF-8 ## tz Etc/UTC ## date 2022-05-05 ## ## ─ Packages ─────────────────────────────────────────────────────────────────── ## package * version date lib source ## assertthat 0.2.1 2019-03-21 [1] RSPM (R 4.0.3) ## bookdown 0.24 2022-02-15 [1] Github (rstudio/bookdown@88bc4ea) ## callr 3.4.4 2020-09-07 [1] RSPM (R 4.0.2) ## cli 2.0.2 2020-02-28 [1] RSPM (R 4.0.0) ## crayon 1.3.4 2017-09-16 [1] RSPM (R 4.0.0) ## desc 1.2.0 2018-05-01 [1] RSPM (R 4.0.3) ## devtools 2.3.2 2020-09-18 [1] RSPM (R 4.0.3) ## digest 0.6.25 2020-02-23 [1] RSPM (R 4.0.0) ## ellipsis 0.3.1 2020-05-15 [1] RSPM (R 4.0.3) ## evaluate 0.14 2019-05-28 [1] RSPM (R 4.0.3) ## fansi 0.4.1 2020-01-08 [1] RSPM (R 4.0.0) ## fs 1.5.0 2020-07-31 [1] RSPM (R 4.0.3) ## glue 1.6.1 2022-01-22 [1] CRAN (R 4.0.2) ## hms 0.5.3 2020-01-08 [1] RSPM (R 4.0.0) ## htmltools 0.5.0 2020-06-16 [1] RSPM (R 4.0.1) ## jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.0.2) ## knitr 1.33 2022-02-15 [1] Github (yihui/knitr@a1052d1) ## lifecycle 1.0.0 2021-02-15 [1] CRAN (R 4.0.2) ## magrittr 2.0.2 2022-01-26 [1] CRAN (R 4.0.2) ## memoise 1.1.0 2017-04-21 [1] RSPM (R 4.0.0) ## ottrpal 0.1.2 2022-02-15 [1] Github (jhudsl/ottrpal@1018848) ## pillar 1.4.6 2020-07-10 [1] RSPM (R 4.0.2) ## pkgbuild 1.1.0 2020-07-13 [1] RSPM (R 4.0.2) ## pkgconfig 2.0.3 2019-09-22 [1] RSPM (R 4.0.3) ## pkgload 1.1.0 2020-05-29 [1] RSPM (R 4.0.3) ## prettyunits 1.1.1 2020-01-24 [1] RSPM (R 4.0.3) ## processx 3.4.4 2020-09-03 [1] RSPM (R 4.0.2) ## ps 1.3.4 2020-08-11 [1] RSPM (R 4.0.2) ## purrr 0.3.4 2020-04-17 [1] RSPM (R 4.0.3) ## R6 2.4.1 2019-11-12 [1] RSPM (R 4.0.0) ## readr 1.4.0 2020-10-05 [1] RSPM (R 4.0.2) ## remotes 2.2.0 2020-07-21 [1] RSPM (R 4.0.3) ## rlang 0.4.10 2022-02-15 [1] Github (r-lib/rlang@f0c9be5) ## rmarkdown 2.10 2022-02-15 [1] Github (rstudio/rmarkdown@02d3c25) ## rprojroot 2.0.2 2020-11-15 [1] CRAN (R 4.0.2) ## sessioninfo 1.1.1 2018-11-05 [1] RSPM (R 4.0.3) ## stringi 1.5.3 2020-09-09 [1] RSPM (R 4.0.3) ## stringr 1.4.0 2019-02-10 [1] RSPM (R 4.0.3) ## testthat 3.0.1 2022-02-15 [1] Github (R-lib/testthat@e99155a) ## tibble 3.0.3 2020-07-10 [1] RSPM (R 4.0.2) ## usethis 2.1.5.9000 2022-02-15 [1] Github (r-lib/usethis@57b109a) ## vctrs 0.3.4 2020-08-29 [1] RSPM (R 4.0.2) ## withr 2.3.0 2020-09-22 [1] RSPM (R 4.0.2) ## xfun 0.26 2022-02-15 [1] Github (yihui/xfun@74c2a66) ## yaml 2.2.1 2020-02-01 [1] RSPM (R 4.0.3) ## ## [1] /usr/local/lib/R/site-library ## [2] /usr/local/lib/R/library "],["references-2.html", "Chapter 11 References", " Chapter 11 References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
